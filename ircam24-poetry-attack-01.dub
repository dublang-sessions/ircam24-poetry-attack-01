#!dublang

supercollider([[~dirt.loadSoundFiles("${config.path.sounds}/sounds-berimbau/*")]])
supercollider([[~dirt.loadSoundFiles("${config.path.sounds}/sounds-pandeiro/*")]])
supercollider([[~dirt.loadSoundFiles("${config.path.sounds}/sounds-mocreo/*")]])

length(20000)
cycle({
  function()
    espeak([[question?]])
  end,
  function()
    espeak([[how many?]])
  end,
  function()
    espeak([[black people?]])
  end,
  function()
    espeak([[are here?]])
  end,
})

cycle({})

schedule({
  [1] = function()
    espeak([[question?]])
  end,
  [5] = function()
    espeak([[how many?]])
  end,
  [10] = function()
    espeak([[black people?]])
  end,
  [15] = function()
    espeak([[are here?]])
  end,
})


fudi([[onoff 1; vol 0.10; freq 720; wave 0; delay 1; time 500; mod 500;]])

fudi([[onoff 0;]])

schedule({
  [1] = function()
    fudi([[onoff 1; vol 0.15; freq 720; wave 0; delay 1; time 500; mod 500;]])
  end,
  [2] = function()
    fudi([[onoff 1; vol 0.15; freq 730; wave 0; delay 1; time 500; mod 500;]])
  end,
  [3] = function()
    fudi([[onoff 1; vol 0.20; freq 440; wave 0; delay 1; time 250;]])
  end,
  [4] = function()
    fudi([[onoff 1; vol 0.21; freq 430; wave 0; delay 1; time 550;]])
  end,
  [5] = function()
    fudi([[onoff 1; vol 0.22; freq 440; wave 1; delay 1; time 650;]])
  end,
  [6] = function()
    fudi([[onoff 1; vol 0.21; freq 140; wave 3; delay 1; time 200; mod 150;]])
  end,
  [9] = function()
    fudi([[onoff 1; vol 0.20; freq 440; wave 1; delay 0;]])
  end,
  [12] = function()
    fudi([[onoff 1; vol 0.20; freq 440; wave 2; delay 1;]])
  end,
  [15] = function()
    fudi([[freq 2; vol 0.25;]])
  end,
  [16] = function()
    fudi([[freq 4; vol 0.30;]])
  end,
  [17] = function()
    fudi([[freq 6; vol 0.32;]])
  end,
  [18] = function()
    fudi([[onoff 0;]])
  end,
})

schedule({
  [1] = function()
    fudi([[onoff 1; vol 0.20; freq 220; wave 0; delay 1; time 200; mod 100;]])
  end,
  [2] = function()
    fudi([[onoff 1; vol 0.15; freq 225; wave 1; delay 0; time 300; mod 110;]])
  end,
  [3] = function()
    fudi([[onoff 1; vol 0.20; freq 230; wave 0; delay 1; time 100; mod 120;]])
  end,
  [4] = function()
    fudi([[onoff 1; vol 0.21; freq 235; wave 2; delay 1; time 500; mod 110;]])
  end,
  [5] = function()
    fudi([[onoff 0;]])
  end,
  [6] = function()
    fudi([[onoff 1; vol 0.22; freq 240; wave 1; delay 0; time 80; mod 100;]])
  end,
  [7] = function()
    fudi([[onoff 1; vol 0.21; freq 145; wave 3; delay 1; time 20; mod 90;]])
  end,
  [8] = function()
    fudi([[onoff 1; vol 0.21; freq 250; wave 2; delay 1; time 1000; mod 80;]])
  end,
  [9] = function()
    fudi([[onoff 1; vol 0.21; freq 255; wave 3; delay 0; time 200; mod 70;]])
  end,
  [10] = function()
    fudi([[onoff 0;]])
  end,
  [11] = function()
    fudi([[onoff 1; vol 0.20; freq 260; wave 1; delay 0; time 250; mod 60;]])
  end,
  [12] = function()
    fudi([[onoff 1; vol 0.20; freq 465; wave 0; delay 1; time 300; mod 50;]])
  end,
  [13] = function()
    fudi([[onoff 1; vol 0.20; freq 270; wave 1; delay 0; time 350; mod 40;]])
  end,
  [14] = function()
    fudi([[onoff 1; vol 0.20; freq 75; wave 2; delay 1; time 400; mod 30;]])
  end,
  [17] = function()
    fudi([[freq 2; vol 0.25;]])
  end,
  [18] = function()
    fudi([[freq 4; vol 0.30;]])
  end,
  [19] = function()
    fudi([[onoff 0;]])
  end,
  [20] = function()
    fudi([[freq 6; vol 0.32;]])
  end,
  [21] = function()
    fudi([[onoff 0;]])
  end,
})


#!supercollider

(
  SynthDef(\superpwm, {|out, speed=1, decay=0, sustain=1, pan, accelerate, freq,
    voice=0.5, semitone=12, resonance=0.2, lfo=1, pitch1=1|
    var env = EnvGen.ar(Env.pairs([[0,0],[0.05,1],[0.2,1-decay],[0.95,1-decay],[1,0]], -3), timeScale:sustain, doneAction:2);
    var env2 = EnvGen.ar(Env.pairs([[0,0.1],[0.1,1],[0.4,0.5],[0.9,0.2],[1,0.2]], -3), timeScale:sustain/speed);
    var basefreq = freq * Line.kr(1, 1+accelerate, sustain);
    var basefreq2 = basefreq / (2**(semitone/12));
    var lfof1 = min(basefreq*10*pitch1, 22000);
    var lfof2 = min(lfof1 * (lfo + 1), 22000);
    var sound = 0.5 * PulseDPW.ar(basefreq) * DelayC.ar(PulseDPW.ar(basefreq), 0.2, Line.kr(0,voice,sustain)/basefreq);
    sound = 0.2 * PulseDPW.ar(basefreq2) * DelayC.ar(PulseDPW.ar(basefreq2), 0.2, Line.kr(0.1,0.1+voice,sustain)/basefreq) + sound;
    sound = MoogFF.ar(sound, SinOsc.ar(basefreq/32*speed, 0).range(lfof1,lfof2), resonance*4);
    sound = MoogFF.ar(sound, min(env2*lfof2*1.1, 22000), 3);
    sound = sound.tanh*2;
    OffsetOut.ar(out, DirtPan.ar(sound, 2, pan, env));
  }).add;
);

#!supercollider

|repeat 5

Synth(\superpwm, [
  \freq, ${FREQ},
  \sustain, ${SUSTAIN},
  \semitone, 8,
  \lfo, ${FREQ} / ${SUSTAIN},
  \voice, ${FREQ} / 400,
]);

#!dublang
|repeat 3

vim.env.FREQ = math.random(460)
vim.env.SUSTAIN = math.random(8)
return vim.env.FREQ

#!tidalcycles

d1
  $ fast 2
  $ sometimes (off 0.25 (# up "-8"))
  $ stut 3 0.5 0.5
  $ s "mocreo*2"
  # n (irand 8)
  # gain 1 # shape 0.4

xfadeIn 2 32 $ silence

d1
  $ sometimes (stut 8 0.5 0.25)
  $ often (# vowel "[a|u|i]")
  $ sound "pandeiro(5,8)"
  # n (irand 5)
  # orbit 1
  # room 0.75
  # size 0.75
  # gain (slow 8 $ palindrome $ range 0.75 1 sine)

d2
  $ rarely (superimpose ((# squiz 2) . (chop 8) . (|- gain 0.25)))
  $ slow 8
  $ slowcat [
    sound "berimbau",
    sound "berimbau-calango",
    sound "berimbau-session",
    sound "berimbau-slow"
  ]
  # n (irand 8)
  # lpf (slow 4 $ range 400 3000 sine)
  # speed 1 |+ speed (slow 2 $ sine * 0.5)
  # gain (slow 6 $ palindrome $ range 0.75 1 sine)

xfadeIn 1 32 $ silence

xfadeIn 2 32 $ silence

d1 $ silence

xfadeIn 3 32
  $ stack [
    slowcat [
      sound "[bd*2, ~ jazz:7?]" # gain 1 |+ gain (rand * 0.2),
      sound "[bd*2, ~ [jazz:7*2]]" # gain 1 |+ gain (rand * 0.2),
      sound "[bd*2, ~ jazz:7?]" # gain 1 |+ gain (rand * 0.2),
      sound "[bd*2, ~ [jazz:7*4]]" # gain 1 |+ gain (rand * 0.2)
    ],
    sound "hh*16" # speed 1.5 # gain 1.2 # pan (slow 8 $ sine)
  ]
  # shape 0.2

xfadeIn 4 32
  $ off 0.25 (|+ up 8)
  $ off "-0.25" (|- up 8)
  $ degrade
  $ stack [
    note (palindrome $ scale "chromatic" (run 4)) # gain 1 # vowel "a",
    note (palindrome $ scale "chromatic" (run 8)) # gain 0.8 # vowel "o",
    note "a*8" # up 8 # speed 2 # squiz 3 # gain 0.8
  ]
  # sound "superpiano"
  # orbit 4 # size 0.4 # room 0.5
  # pan "[0|1]"
  |- gain (rand * 0.2)

d5
  $ off "0.25" ((|+ up "[8|-8]") . (|- gain 0.2))
  $ degradeBy 0.8
  $ stack [
    note (scale "chromatic" (run 12)) # lpf 1000,
    note (scale "chromatic" (run 4)) # lpf 2000
  ]
  # sound "bass2"

do
  xfadeIn 1 32 $ silence
  xfadeIn 2 32 $ silence
  xfadeIn 3 32 $ silence
  xfadeIn 4 32 $ silence
  xfadeIn 5 32 $ silence

-- T20: silence

d6
  $ whenmod 16 14 (superimpose (slow 2))
  $ stack [
    sound "[bd*4, jazz:7(3,8), hh:5*4]" # shape 0.3,
    sound "hh27*16" # pan (slow 4 $ sine) # shape 0.5
  ]
  # gain 1.2
  # lpf 2100 # vowel "o"
  # orbit 6 # room 0.25 # size 0.1


d7
  $ sometimes (rev . chop 2)
  $ off 0.25 (|+ up 8)
  $ off "-0.25" (|- up 8)
  $ stut (irand 4) 0.9 0.125
  $ slowcat [
    note "<a'maj c'maj>" # gain 1.0 # vowel "a",
    note "<c'min g'maj>" # gain 0.9 # vowel "o",
    note "<e'maj e'min>" # gain 0.8 # vowel "u"
  ]
  # sound "[superpiano, supersiren?]"
  # attack 0.2 # sustain 1 # release 0.5


#!espeak

In another hundred and twenty days the building of the Integral will be completed.
.
Completed.
Completed.
.
The great historic hour is near, when the first Integral will rise into the limitless space of the universe.
.
Universe.
Universe.
.
A thousand years ago your heroic ancestors subjected the whole earth to the power of the United State.
.
United State.
United State.
.
A still more glorious task is before you,â€”the integration of the indefinite equation of the Cosmos by the use of the glass, electric, fire-breathing Integral.
.
Integral.
Integral.
.
Your mission is to subjugate to the grateful yoke of reason the unknown beings who live on other planets, and who are perhaps still in the primitive state of freedom.
.
Freedom.
Freedom.
.
If they will not understand that we are bringing them a mathematically faultless happiness, our duty will be to force them to be happy.
.
Happy.
Happy.
.
But before we take up arms, we shall try the power of words.
.
Words.
Words.
.
In the name of The Well-Doer, the following is announced herewith to all Numbers of the United State:
.
Whoever feels capable must consider it his duty to write treatises, poems, manifestoes, odes and other compositions on the greatness and the beauty of the United State.
.
United State.
United State.
.
This will be the first load which the Integral will carry.
.
Carry.
Carry.
.
Long live the United State! Long live the Numbers!! Long live the Well-Doer!!!
.
Long live the Numbers!!
.
Long live the Numbers!!
.
Long live the Numbers!!
.
Numbers!!
.
Numbers!!
.
Numbers!!
.
How many?
.
Black numbers?
.
How many?
.
Are here?
.
How many?
.
People?
.
How many?
.
Black people?
.
Are here?
.
Black numbers?
.
Numbers!!
.
Black numbers?

#!fudi

-- onoff: [0 "off", 1 "on"]
-- freq: 0-2500
-- delay: [0 "off", 1 "on"]
-- time: 0-2000
-- wave: [0 "tri", 1 "ramp", 2 "saw", 3 "sqr"]
-- mod (freq modulation): 0-200
-- vol: 0-1
-- time: 0-2000

onoff 1; vol 0.2;

onoff 0;

onoff 1; freq 440;

onoff 1; freq 140; delay 1; time 200; mod 150;

onoff 1; freq 440; wave 1;

onoff 1; freq 440; wave 2;

freq 2;

onoff 1; freq 920; wave 0;

#!puredata

open /home/joenio/art/sounds/synths-puredata/oscillator/sine.pd

send /home/joenio/art/sounds/synths-puredata/oscillator/sine.pd freq 66

send /home/joenio/art/sounds/synths-puredata/oscillator/sine.pd vol 0.5

close /home/joenio/art/sounds/synths-puredata/oscillator/sine.pd

open /home/joenio/art/sounds/synths-puredata/oscillator/sawtooth.pd

send /home/joenio/art/sounds/synths-puredata/oscillator/sawtooth.pd freq 46

send /home/joenio/art/sounds/synths-puredata/oscillator/sawtooth.pd vol 0.5

close /home/joenio/art/sounds/synths-puredata/oscillator/sawtooth.pd
